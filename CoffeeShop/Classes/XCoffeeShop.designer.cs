#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoffeeShop.Classes
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CoffeeShop")]
	public partial class XCoffeeShopDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertFavoriteProduct(FavoriteProduct instance);
    partial void UpdateFavoriteProduct(FavoriteProduct instance);
    partial void DeleteFavoriteProduct(FavoriteProduct instance);
    partial void InsertFavoriteProductStuff(FavoriteProductStuff instance);
    partial void UpdateFavoriteProductStuff(FavoriteProductStuff instance);
    partial void DeleteFavoriteProductStuff(FavoriteProductStuff instance);
    partial void InsertOrderProduct(OrderProduct instance);
    partial void UpdateOrderProduct(OrderProduct instance);
    partial void DeleteOrderProduct(OrderProduct instance);
    partial void InsertOrderProductStuff(OrderProductStuff instance);
    partial void UpdateOrderProductStuff(OrderProductStuff instance);
    partial void DeleteOrderProductStuff(OrderProductStuff instance);
    partial void InsertOrderSource(OrderSource instance);
    partial void UpdateOrderSource(OrderSource instance);
    partial void DeleteOrderSource(OrderSource instance);
    partial void InsertOrderStatus(OrderStatus instance);
    partial void UpdateOrderStatus(OrderStatus instance);
    partial void DeleteOrderStatus(OrderStatus instance);
    partial void InsertOrderType(OrderType instance);
    partial void UpdateOrderType(OrderType instance);
    partial void DeleteOrderType(OrderType instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertPaymentDestination(PaymentDestination instance);
    partial void UpdatePaymentDestination(PaymentDestination instance);
    partial void DeletePaymentDestination(PaymentDestination instance);
    partial void InsertPaymentType(PaymentType instance);
    partial void UpdatePaymentType(PaymentType instance);
    partial void DeletePaymentType(PaymentType instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertPersonel(Personel instance);
    partial void UpdatePersonel(Personel instance);
    partial void DeletePersonel(Personel instance);
    partial void InsertPersonelShopHistory(PersonelShopHistory instance);
    partial void UpdatePersonelShopHistory(PersonelShopHistory instance);
    partial void DeletePersonelShopHistory(PersonelShopHistory instance);
    partial void InsertPersonelType(PersonelType instance);
    partial void UpdatePersonelType(PersonelType instance);
    partial void DeletePersonelType(PersonelType instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductStuff(ProductStuff instance);
    partial void UpdateProductStuff(ProductStuff instance);
    partial void DeleteProductStuff(ProductStuff instance);
    partial void InsertShop(Shop instance);
    partial void UpdateShop(Shop instance);
    partial void DeleteShop(Shop instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertStuff(Stuff instance);
    partial void UpdateStuff(Stuff instance);
    partial void DeleteStuff(Stuff instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertShopProduct(ShopProduct instance);
    partial void UpdateShopProduct(ShopProduct instance);
    partial void DeleteShopProduct(ShopProduct instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    #endregion
		
		public XCoffeeShopDataContext() : 
				base("Data Source=DESKTOP-OHKJ7FU;Initial Catalog=CoffeeShop;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public XCoffeeShopDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XCoffeeShopDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XCoffeeShopDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XCoffeeShopDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteProduct> FavoriteProducts
		{
			get
			{
				return this.GetTable<FavoriteProduct>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteProductStuff> FavoriteProductStuffs
		{
			get
			{
				return this.GetTable<FavoriteProductStuff>();
			}
		}
		
		public System.Data.Linq.Table<OrderProduct> OrderProducts
		{
			get
			{
				return this.GetTable<OrderProduct>();
			}
		}
		
		public System.Data.Linq.Table<OrderProductStuff> OrderProductStuffs
		{
			get
			{
				return this.GetTable<OrderProductStuff>();
			}
		}
		
		public System.Data.Linq.Table<OrderSource> OrderSources
		{
			get
			{
				return this.GetTable<OrderSource>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatus> OrderStatus
		{
			get
			{
				return this.GetTable<OrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<OrderType> OrderTypes
		{
			get
			{
				return this.GetTable<OrderType>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<PaymentDestination> PaymentDestinations
		{
			get
			{
				return this.GetTable<PaymentDestination>();
			}
		}
		
		public System.Data.Linq.Table<PaymentType> PaymentTypes
		{
			get
			{
				return this.GetTable<PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Personel> Personels
		{
			get
			{
				return this.GetTable<Personel>();
			}
		}
		
		public System.Data.Linq.Table<PersonelShopHistory> PersonelShopHistories
		{
			get
			{
				return this.GetTable<PersonelShopHistory>();
			}
		}
		
		public System.Data.Linq.Table<PersonelType> PersonelTypes
		{
			get
			{
				return this.GetTable<PersonelType>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductStuff> ProductStuffs
		{
			get
			{
				return this.GetTable<ProductStuff>();
			}
		}
		
		public System.Data.Linq.Table<Shop> Shops
		{
			get
			{
				return this.GetTable<Shop>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<Stuff> Stuffs
		{
			get
			{
				return this.GetTable<Stuff>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<ShopProduct> ShopProducts
		{
			get
			{
				return this.GetTable<ShopProduct>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private int _PersonId;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    #endregion
		
		public Admin()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int NOT NULL")]
		public int PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Admin", Storage="_Person", ThisKey="PersonId", OtherKey="Id", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Admins.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Admins.Add(this);
						this._PersonId = value.Id;
					}
					else
					{
						this._PersonId = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private int _PersonId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<int> _ModifyDate;
		
		private EntitySet<FavoriteProduct> _FavoriteProducts;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<int> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public Customer()
		{
			this._FavoriteProducts = new EntitySet<FavoriteProduct>(new Action<FavoriteProduct>(this.attach_FavoriteProducts), new Action<FavoriteProduct>(this.detach_FavoriteProducts));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int NOT NULL")]
		public int PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="Int")]
		public System.Nullable<int> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_FavoriteProduct", Storage="_FavoriteProducts", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<FavoriteProduct> FavoriteProducts
		{
			get
			{
				return this._FavoriteProducts;
			}
			set
			{
				this._FavoriteProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Orders", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Customer", Storage="_Person", ThisKey="PersonId", OtherKey="Id", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._PersonId = value.Id;
					}
					else
					{
						this._PersonId = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FavoriteProducts(FavoriteProduct entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_FavoriteProducts(FavoriteProduct entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteProduct")]
	public partial class FavoriteProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _LatinTitle;
		
		private int _ProductId;
		
		private int _CustomerId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<FavoriteProductStuff> _FavoriteProductStuffs;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public FavoriteProduct()
		{
			this._FavoriteProductStuffs = new EntitySet<FavoriteProductStuff>(new Action<FavoriteProductStuff>(this.attach_FavoriteProductStuffs), new Action<FavoriteProductStuff>(this.detach_FavoriteProductStuffs));
			this._Customer = default(EntityRef<Customer>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FavoriteProduct_FavoriteProductStuff", Storage="_FavoriteProductStuffs", ThisKey="Id", OtherKey="FavoriteProductId")]
		public EntitySet<FavoriteProductStuff> FavoriteProductStuffs
		{
			get
			{
				return this._FavoriteProductStuffs;
			}
			set
			{
				this._FavoriteProductStuffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_FavoriteProduct", Storage="_Customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.FavoriteProducts.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.FavoriteProducts.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_FavoriteProduct", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.FavoriteProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.FavoriteProducts.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FavoriteProductStuffs(FavoriteProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.FavoriteProduct = this;
		}
		
		private void detach_FavoriteProductStuffs(FavoriteProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.FavoriteProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteProductStuff")]
	public partial class FavoriteProductStuff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Value;
		
		private int _FavoriteProductId;
		
		private int _ProductStuffId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntityRef<FavoriteProduct> _FavoriteProduct;
		
		private EntityRef<ProductStuff> _ProductStuff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnFavoriteProductIdChanging(int value);
    partial void OnFavoriteProductIdChanged();
    partial void OnProductStuffIdChanging(int value);
    partial void OnProductStuffIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public FavoriteProductStuff()
		{
			this._FavoriteProduct = default(EntityRef<FavoriteProduct>);
			this._ProductStuff = default(EntityRef<ProductStuff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoriteProductId", DbType="Int NOT NULL")]
		public int FavoriteProductId
		{
			get
			{
				return this._FavoriteProductId;
			}
			set
			{
				if ((this._FavoriteProductId != value))
				{
					if (this._FavoriteProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFavoriteProductIdChanging(value);
					this.SendPropertyChanging();
					this._FavoriteProductId = value;
					this.SendPropertyChanged("FavoriteProductId");
					this.OnFavoriteProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStuffId", DbType="Int NOT NULL")]
		public int ProductStuffId
		{
			get
			{
				return this._ProductStuffId;
			}
			set
			{
				if ((this._ProductStuffId != value))
				{
					if (this._ProductStuff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductStuffIdChanging(value);
					this.SendPropertyChanging();
					this._ProductStuffId = value;
					this.SendPropertyChanged("ProductStuffId");
					this.OnProductStuffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FavoriteProduct_FavoriteProductStuff", Storage="_FavoriteProduct", ThisKey="FavoriteProductId", OtherKey="Id", IsForeignKey=true)]
		public FavoriteProduct FavoriteProduct
		{
			get
			{
				return this._FavoriteProduct.Entity;
			}
			set
			{
				FavoriteProduct previousValue = this._FavoriteProduct.Entity;
				if (((previousValue != value) 
							|| (this._FavoriteProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FavoriteProduct.Entity = null;
						previousValue.FavoriteProductStuffs.Remove(this);
					}
					this._FavoriteProduct.Entity = value;
					if ((value != null))
					{
						value.FavoriteProductStuffs.Add(this);
						this._FavoriteProductId = value.Id;
					}
					else
					{
						this._FavoriteProductId = default(int);
					}
					this.SendPropertyChanged("FavoriteProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductStuff_FavoriteProductStuff", Storage="_ProductStuff", ThisKey="ProductStuffId", OtherKey="Id", IsForeignKey=true)]
		public ProductStuff ProductStuff
		{
			get
			{
				return this._ProductStuff.Entity;
			}
			set
			{
				ProductStuff previousValue = this._ProductStuff.Entity;
				if (((previousValue != value) 
							|| (this._ProductStuff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductStuff.Entity = null;
						previousValue.FavoriteProductStuffs.Remove(this);
					}
					this._ProductStuff.Entity = value;
					if ((value != null))
					{
						value.FavoriteProductStuffs.Add(this);
						this._ProductStuffId = value.Id;
					}
					else
					{
						this._ProductStuffId = default(int);
					}
					this.SendPropertyChanged("ProductStuff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderProduct")]
	public partial class OrderProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Price;
		
		private int _Count;
		
		private int _ProductId;
		
		private int _OrderId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<OrderProductStuff> _OrderProductStuffs;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public OrderProduct()
		{
			this._OrderProductStuffs = new EntitySet<OrderProductStuff>(new Action<OrderProductStuff>(this.attach_OrderProductStuffs), new Action<OrderProductStuff>(this.detach_OrderProductStuffs));
			this._Product = default(EntityRef<Product>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderProduct_OrderProductStuff", Storage="_OrderProductStuffs", ThisKey="Id", OtherKey="OrderProductId")]
		public EntitySet<OrderProductStuff> OrderProductStuffs
		{
			get
			{
				return this._OrderProductStuffs;
			}
			set
			{
				this._OrderProductStuffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderProduct", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.OrderProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.OrderProducts.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderProduct", Storage="_Order", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderProducts.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderProducts.Add(this);
						this._OrderId = value.Id;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderProductStuffs(OrderProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.OrderProduct = this;
		}
		
		private void detach_OrderProductStuffs(OrderProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.OrderProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderProductStuff")]
	public partial class OrderProductStuff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private double _Value;
		
		private int _ProductStuffId;
		
		private int _OrderProductId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntityRef<OrderProduct> _OrderProduct;
		
		private EntityRef<ProductStuff> _ProductStuff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnValueChanging(double value);
    partial void OnValueChanged();
    partial void OnProductStuffIdChanging(int value);
    partial void OnProductStuffIdChanged();
    partial void OnOrderProductIdChanging(int value);
    partial void OnOrderProductIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public OrderProductStuff()
		{
			this._OrderProduct = default(EntityRef<OrderProduct>);
			this._ProductStuff = default(EntityRef<ProductStuff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float NOT NULL")]
		public double Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStuffId", DbType="Int NOT NULL")]
		public int ProductStuffId
		{
			get
			{
				return this._ProductStuffId;
			}
			set
			{
				if ((this._ProductStuffId != value))
				{
					if (this._ProductStuff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductStuffIdChanging(value);
					this.SendPropertyChanging();
					this._ProductStuffId = value;
					this.SendPropertyChanged("ProductStuffId");
					this.OnProductStuffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderProductId", DbType="Int NOT NULL")]
		public int OrderProductId
		{
			get
			{
				return this._OrderProductId;
			}
			set
			{
				if ((this._OrderProductId != value))
				{
					if (this._OrderProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderProductIdChanging(value);
					this.SendPropertyChanging();
					this._OrderProductId = value;
					this.SendPropertyChanged("OrderProductId");
					this.OnOrderProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderProduct_OrderProductStuff", Storage="_OrderProduct", ThisKey="OrderProductId", OtherKey="Id", IsForeignKey=true)]
		public OrderProduct OrderProduct
		{
			get
			{
				return this._OrderProduct.Entity;
			}
			set
			{
				OrderProduct previousValue = this._OrderProduct.Entity;
				if (((previousValue != value) 
							|| (this._OrderProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderProduct.Entity = null;
						previousValue.OrderProductStuffs.Remove(this);
					}
					this._OrderProduct.Entity = value;
					if ((value != null))
					{
						value.OrderProductStuffs.Add(this);
						this._OrderProductId = value.Id;
					}
					else
					{
						this._OrderProductId = default(int);
					}
					this.SendPropertyChanged("OrderProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductStuff_OrderProductStuff", Storage="_ProductStuff", ThisKey="ProductStuffId", OtherKey="Id", IsForeignKey=true)]
		public ProductStuff ProductStuff
		{
			get
			{
				return this._ProductStuff.Entity;
			}
			set
			{
				ProductStuff previousValue = this._ProductStuff.Entity;
				if (((previousValue != value) 
							|| (this._ProductStuff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductStuff.Entity = null;
						previousValue.OrderProductStuffs.Remove(this);
					}
					this._ProductStuff.Entity = value;
					if ((value != null))
					{
						value.OrderProductStuffs.Add(this);
						this._ProductStuffId = value.Id;
					}
					else
					{
						this._ProductStuffId = default(int);
					}
					this.SendPropertyChanged("ProductStuff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderSource")]
	public partial class OrderSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _LatinTitle;
		
		private int _OrderId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public OrderSource()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderSource", Storage="_Order", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderSources.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderSources.Add(this);
						this._OrderId = value.Id;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatus")]
	public partial class OrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private int _StatusId;
		
		private int _OrderId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntityRef<Status> _Status;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public OrderStatus()
		{
			this._Status = default(EntityRef<Status>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime2 NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int NOT NULL")]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_OrderStatus", Storage="_Status", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.OrderStatus.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.OrderStatus.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(int);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderStatus", Storage="_Order", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderStatus.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderStatus.Add(this);
						this._OrderId = value.Id;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderType")]
	public partial class OrderType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _LatinTitle;
		
		private System.Nullable<int> _CreateUsrId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnCreateUsrIdChanging(System.Nullable<int> value);
    partial void OnCreateUsrIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public OrderType()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUsrId", DbType="Int")]
		public System.Nullable<int> CreateUsrId
		{
			get
			{
				return this._CreateUsrId;
			}
			set
			{
				if ((this._CreateUsrId != value))
				{
					this.OnCreateUsrIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUsrId = value;
					this.SendPropertyChanged("CreateUsrId");
					this.OnCreateUsrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_Order", Storage="_Orders", ThisKey="Id", OtherKey="OrderTypeId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Price;
		
		private System.DateTime _PaymentDate;
		
		private int _Code;
		
		private int _PersonelId;
		
		private int _OrderId;
		
		private int _PaymentDestinationId;
		
		private int _PaymentTypeId;
		
		private System.Nullable<int> _CreateUaserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntityRef<PaymentDestination> _PaymentDestination;
		
		private EntityRef<PaymentType> _PaymentType;
		
		private EntityRef<Personel> _Personel;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnPersonelIdChanging(int value);
    partial void OnPersonelIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnPaymentDestinationIdChanging(int value);
    partial void OnPaymentDestinationIdChanged();
    partial void OnPaymentTypeIdChanging(int value);
    partial void OnPaymentTypeIdChanged();
    partial void OnCreateUaserIdChanging(System.Nullable<int> value);
    partial void OnCreateUaserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public Payment()
		{
			this._PaymentDestination = default(EntityRef<PaymentDestination>);
			this._PaymentType = default(EntityRef<PaymentType>);
			this._Personel = default(EntityRef<Personel>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelId", DbType="Int NOT NULL")]
		public int PersonelId
		{
			get
			{
				return this._PersonelId;
			}
			set
			{
				if ((this._PersonelId != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonelIdChanging(value);
					this.SendPropertyChanging();
					this._PersonelId = value;
					this.SendPropertyChanged("PersonelId");
					this.OnPersonelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDestinationId", DbType="Int NOT NULL")]
		public int PaymentDestinationId
		{
			get
			{
				return this._PaymentDestinationId;
			}
			set
			{
				if ((this._PaymentDestinationId != value))
				{
					if (this._PaymentDestination.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentDestinationIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentDestinationId = value;
					this.SendPropertyChanged("PaymentDestinationId");
					this.OnPaymentDestinationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL")]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					if (this._PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUaserId", DbType="Int")]
		public System.Nullable<int> CreateUaserId
		{
			get
			{
				return this._CreateUaserId;
			}
			set
			{
				if ((this._CreateUaserId != value))
				{
					this.OnCreateUaserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUaserId = value;
					this.SendPropertyChanged("CreateUaserId");
					this.OnCreateUaserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentDestination_Payment", Storage="_PaymentDestination", ThisKey="PaymentDestinationId", OtherKey="Id", IsForeignKey=true)]
		public PaymentDestination PaymentDestination
		{
			get
			{
				return this._PaymentDestination.Entity;
			}
			set
			{
				PaymentDestination previousValue = this._PaymentDestination.Entity;
				if (((previousValue != value) 
							|| (this._PaymentDestination.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentDestination.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._PaymentDestination.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PaymentDestinationId = value.Id;
					}
					else
					{
						this._PaymentDestinationId = default(int);
					}
					this.SendPropertyChanged("PaymentDestination");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_Payment", Storage="_PaymentType", ThisKey="PaymentTypeId", OtherKey="Id", IsForeignKey=true)]
		public PaymentType PaymentType
		{
			get
			{
				return this._PaymentType.Entity;
			}
			set
			{
				PaymentType previousValue = this._PaymentType.Entity;
				if (((previousValue != value) 
							|| (this._PaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentType.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._PaymentType.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PaymentTypeId = value.Id;
					}
					else
					{
						this._PaymentTypeId = default(int);
					}
					this.SendPropertyChanged("PaymentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Payment", Storage="_Personel", ThisKey="PersonelId", OtherKey="Id", IsForeignKey=true)]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PersonelId = value.Id;
					}
					else
					{
						this._PersonelId = default(int);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Payment", Storage="_Order", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._OrderId = value.Id;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentDestination")]
	public partial class PaymentDestination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _LatinTitle;
		
		private int _Code;
		
		private string _Destination;
		
		private string _Description;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public PaymentDestination()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentDestination_Payment", Storage="_Payments", ThisKey="Id", OtherKey="PaymentDestinationId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.PaymentDestination = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.PaymentDestination = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentType")]
	public partial class PaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _LatinTitle;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public PaymentType()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_Payment", Storage="_Payments", ThisKey="Id", OtherKey="PaymentTypeId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Family;
		
		private string _NationalCode;
		
		private bool _Gender;
		
		private bool _IsMarid;
		
		private string _Phone;
		
		private string _Mobile;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private System.Data.Linq.Binary _Image;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<Admin> _Admins;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<Personel> _Personels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    partial void OnIsMaridChanging(bool value);
    partial void OnIsMaridChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDayChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public Person()
		{
			this._Admins = new EntitySet<Admin>(new Action<Admin>(this.attach_Admins), new Action<Admin>(this.detach_Admins));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Personels = new EntitySet<Personel>(new Action<Personel>(this.attach_Personels), new Action<Personel>(this.detach_Personels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Family
		{
			get
			{
				return this._Family;
			}
			set
			{
				if ((this._Family != value))
				{
					this.OnFamilyChanging(value);
					this.SendPropertyChanging();
					this._Family = value;
					this.SendPropertyChanged("Family");
					this.OnFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMarid", DbType="Bit NOT NULL")]
		public bool IsMarid
		{
			get
			{
				return this._IsMarid;
			}
			set
			{
				if ((this._IsMarid != value))
				{
					this.OnIsMaridChanging(value);
					this.SendPropertyChanging();
					this._IsMarid = value;
					this.SendPropertyChanged("IsMarid");
					this.OnIsMaridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime2")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Admin", Storage="_Admins", ThisKey="Id", OtherKey="PersonId")]
		public EntitySet<Admin> Admins
		{
			get
			{
				return this._Admins;
			}
			set
			{
				this._Admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Customer", Storage="_Customers", ThisKey="Id", OtherKey="PersonId")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Personel", Storage="_Personels", ThisKey="Id", OtherKey="PersonId")]
		public EntitySet<Personel> Personels
		{
			get
			{
				return this._Personels;
			}
			set
			{
				this._Personels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Personels(Personel entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Personels(Personel entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personel")]
	public partial class Personel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private int _PersonId;
		
		private int _PersonelTypeId;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<PersonelShopHistory> _PersonelShopHistories;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<PersonelType> _PersonelType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnPersonelTypeIdChanging(int value);
    partial void OnPersonelTypeIdChanged();
    #endregion
		
		public Personel()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._PersonelShopHistories = new EntitySet<PersonelShopHistory>(new Action<PersonelShopHistory>(this.attach_PersonelShopHistories), new Action<PersonelShopHistory>(this.detach_PersonelShopHistories));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Person = default(EntityRef<Person>);
			this._PersonelType = default(EntityRef<PersonelType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int NOT NULL")]
		public int PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelTypeId", DbType="Int NOT NULL")]
		public int PersonelTypeId
		{
			get
			{
				return this._PersonelTypeId;
			}
			set
			{
				if ((this._PersonelTypeId != value))
				{
					if (this._PersonelType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonelTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PersonelTypeId = value;
					this.SendPropertyChanged("PersonelTypeId");
					this.OnPersonelTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Payment", Storage="_Payments", ThisKey="Id", OtherKey="PersonelId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_PersonelShopHistory", Storage="_PersonelShopHistories", ThisKey="Id", OtherKey="PersonelId")]
		public EntitySet<PersonelShopHistory> PersonelShopHistories
		{
			get
			{
				return this._PersonelShopHistories;
			}
			set
			{
				this._PersonelShopHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Order", Storage="_Orders", ThisKey="Id", OtherKey="PersonelId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Personel", Storage="_Person", ThisKey="PersonId", OtherKey="Id", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Personels.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Personels.Add(this);
						this._PersonId = value.Id;
					}
					else
					{
						this._PersonId = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonelType_Personel", Storage="_PersonelType", ThisKey="PersonelTypeId", OtherKey="Id", IsForeignKey=true)]
		public PersonelType PersonelType
		{
			get
			{
				return this._PersonelType.Entity;
			}
			set
			{
				PersonelType previousValue = this._PersonelType.Entity;
				if (((previousValue != value) 
							|| (this._PersonelType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonelType.Entity = null;
						previousValue.Personels.Remove(this);
					}
					this._PersonelType.Entity = value;
					if ((value != null))
					{
						value.Personels.Add(this);
						this._PersonelTypeId = value.Id;
					}
					else
					{
						this._PersonelTypeId = default(int);
					}
					this.SendPropertyChanged("PersonelType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
		
		private void attach_PersonelShopHistories(PersonelShopHistory entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_PersonelShopHistories(PersonelShopHistory entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonelShopHistory")]
	public partial class PersonelShopHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _PersonelId;
		
		private int _ShopId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntityRef<Personel> _Personel;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnPersonelIdChanging(int value);
    partial void OnPersonelIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public PersonelShopHistory()
		{
			this._Personel = default(EntityRef<Personel>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelId", DbType="Int NOT NULL")]
		public int PersonelId
		{
			get
			{
				return this._PersonelId;
			}
			set
			{
				if ((this._PersonelId != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonelIdChanging(value);
					this.SendPropertyChanging();
					this._PersonelId = value;
					this.SendPropertyChanged("PersonelId");
					this.OnPersonelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_PersonelShopHistory", Storage="_Personel", ThisKey="PersonelId", OtherKey="Id", IsForeignKey=true)]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.PersonelShopHistories.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.PersonelShopHistories.Add(this);
						this._PersonelId = value.Id;
					}
					else
					{
						this._PersonelId = default(int);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_PersonelShopHistory", Storage="_Shop", ThisKey="ShopId", OtherKey="Id", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.PersonelShopHistories.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.PersonelShopHistories.Add(this);
						this._ShopId = value.Id;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonelType")]
	public partial class PersonelType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _LatinTitle;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserID;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<Personel> _Personels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIDChanging(System.Nullable<int> value);
    partial void OnModifyUserIDChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public PersonelType()
		{
			this._Personels = new EntitySet<Personel>(new Action<Personel>(this.attach_Personels), new Action<Personel>(this.detach_Personels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserID", DbType="Int")]
		public System.Nullable<int> ModifyUserID
		{
			get
			{
				return this._ModifyUserID;
			}
			set
			{
				if ((this._ModifyUserID != value))
				{
					this.OnModifyUserIDChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserID = value;
					this.SendPropertyChanged("ModifyUserID");
					this.OnModifyUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonelType_Personel", Storage="_Personels", ThisKey="Id", OtherKey="PersonelTypeId")]
		public EntitySet<Personel> Personels
		{
			get
			{
				return this._Personels;
			}
			set
			{
				this._Personels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personels(Personel entity)
		{
			this.SendPropertyChanging();
			entity.PersonelType = this;
		}
		
		private void detach_Personels(Personel entity)
		{
			this.SendPropertyChanging();
			entity.PersonelType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _LatinTitle;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<FavoriteProduct> _FavoriteProducts;
		
		private EntitySet<OrderProduct> _OrderProducts;
		
		private EntitySet<ProductStuff> _ProductStuffs;
		
		private EntitySet<ShopProduct> _ShopProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public Product()
		{
			this._FavoriteProducts = new EntitySet<FavoriteProduct>(new Action<FavoriteProduct>(this.attach_FavoriteProducts), new Action<FavoriteProduct>(this.detach_FavoriteProducts));
			this._OrderProducts = new EntitySet<OrderProduct>(new Action<OrderProduct>(this.attach_OrderProducts), new Action<OrderProduct>(this.detach_OrderProducts));
			this._ProductStuffs = new EntitySet<ProductStuff>(new Action<ProductStuff>(this.attach_ProductStuffs), new Action<ProductStuff>(this.detach_ProductStuffs));
			this._ShopProducts = new EntitySet<ShopProduct>(new Action<ShopProduct>(this.attach_ShopProducts), new Action<ShopProduct>(this.detach_ShopProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_FavoriteProduct", Storage="_FavoriteProducts", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<FavoriteProduct> FavoriteProducts
		{
			get
			{
				return this._FavoriteProducts;
			}
			set
			{
				this._FavoriteProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderProduct", Storage="_OrderProducts", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<OrderProduct> OrderProducts
		{
			get
			{
				return this._OrderProducts;
			}
			set
			{
				this._OrderProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductStuff", Storage="_ProductStuffs", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<ProductStuff> ProductStuffs
		{
			get
			{
				return this._ProductStuffs;
			}
			set
			{
				this._ProductStuffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ShopProduct", Storage="_ShopProducts", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<ShopProduct> ShopProducts
		{
			get
			{
				return this._ShopProducts;
			}
			set
			{
				this._ShopProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FavoriteProducts(FavoriteProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_FavoriteProducts(FavoriteProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_OrderProducts(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_OrderProducts(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductStuffs(ProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductStuffs(ProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ShopProducts(ShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ShopProducts(ShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductStuff")]
	public partial class ProductStuff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private double _MinValue;
		
		private double _MaxValue;
		
		private int _StuffId;
		
		private int _ProductId;
		
		private int _UnitId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<FavoriteProductStuff> _FavoriteProductStuffs;
		
		private EntitySet<OrderProductStuff> _OrderProductStuffs;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Stuff> _Stuff;
		
		private EntityRef<Unit> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMinValueChanging(double value);
    partial void OnMinValueChanged();
    partial void OnMaxValueChanging(double value);
    partial void OnMaxValueChanged();
    partial void OnStuffIdChanging(int value);
    partial void OnStuffIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public ProductStuff()
		{
			this._FavoriteProductStuffs = new EntitySet<FavoriteProductStuff>(new Action<FavoriteProductStuff>(this.attach_FavoriteProductStuffs), new Action<FavoriteProductStuff>(this.detach_FavoriteProductStuffs));
			this._OrderProductStuffs = new EntitySet<OrderProductStuff>(new Action<OrderProductStuff>(this.attach_OrderProductStuffs), new Action<OrderProductStuff>(this.detach_OrderProductStuffs));
			this._Product = default(EntityRef<Product>);
			this._Stuff = default(EntityRef<Stuff>);
			this._Unit = default(EntityRef<Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValue", DbType="Float NOT NULL")]
		public double MinValue
		{
			get
			{
				return this._MinValue;
			}
			set
			{
				if ((this._MinValue != value))
				{
					this.OnMinValueChanging(value);
					this.SendPropertyChanging();
					this._MinValue = value;
					this.SendPropertyChanged("MinValue");
					this.OnMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxValue", DbType="Float NOT NULL")]
		public double MaxValue
		{
			get
			{
				return this._MaxValue;
			}
			set
			{
				if ((this._MaxValue != value))
				{
					this.OnMaxValueChanging(value);
					this.SendPropertyChanging();
					this._MaxValue = value;
					this.SendPropertyChanged("MaxValue");
					this.OnMaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuffId", DbType="Int NOT NULL")]
		public int StuffId
		{
			get
			{
				return this._StuffId;
			}
			set
			{
				if ((this._StuffId != value))
				{
					if (this._Stuff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStuffIdChanging(value);
					this.SendPropertyChanging();
					this._StuffId = value;
					this.SendPropertyChanged("StuffId");
					this.OnStuffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductStuff_FavoriteProductStuff", Storage="_FavoriteProductStuffs", ThisKey="Id", OtherKey="ProductStuffId")]
		public EntitySet<FavoriteProductStuff> FavoriteProductStuffs
		{
			get
			{
				return this._FavoriteProductStuffs;
			}
			set
			{
				this._FavoriteProductStuffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductStuff_OrderProductStuff", Storage="_OrderProductStuffs", ThisKey="Id", OtherKey="ProductStuffId")]
		public EntitySet<OrderProductStuff> OrderProductStuffs
		{
			get
			{
				return this._OrderProductStuffs;
			}
			set
			{
				this._OrderProductStuffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductStuff", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductStuffs.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductStuffs.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stuff_ProductStuff", Storage="_Stuff", ThisKey="StuffId", OtherKey="Id", IsForeignKey=true)]
		public Stuff Stuff
		{
			get
			{
				return this._Stuff.Entity;
			}
			set
			{
				Stuff previousValue = this._Stuff.Entity;
				if (((previousValue != value) 
							|| (this._Stuff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stuff.Entity = null;
						previousValue.ProductStuffs.Remove(this);
					}
					this._Stuff.Entity = value;
					if ((value != null))
					{
						value.ProductStuffs.Add(this);
						this._StuffId = value.Id;
					}
					else
					{
						this._StuffId = default(int);
					}
					this.SendPropertyChanged("Stuff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_ProductStuff", Storage="_Unit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public Unit Unit
		{
			get
			{
				return this._Unit.Entity;
			}
			set
			{
				Unit previousValue = this._Unit.Entity;
				if (((previousValue != value) 
							|| (this._Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unit.Entity = null;
						previousValue.ProductStuffs.Remove(this);
					}
					this._Unit.Entity = value;
					if ((value != null))
					{
						value.ProductStuffs.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FavoriteProductStuffs(FavoriteProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.ProductStuff = this;
		}
		
		private void detach_FavoriteProductStuffs(FavoriteProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.ProductStuff = null;
		}
		
		private void attach_OrderProductStuffs(OrderProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.ProductStuff = this;
		}
		
		private void detach_OrderProductStuffs(OrderProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.ProductStuff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop")]
	public partial class Shop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Mobile;
		
		private System.Data.Linq.Binary _Image;
		
		private string _About;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<PersonelShopHistory> _PersonelShopHistories;
		
		private EntitySet<ShopProduct> _ShopProducts;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnAboutChanging(string value);
    partial void OnAboutChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public Shop()
		{
			this._PersonelShopHistories = new EntitySet<PersonelShopHistory>(new Action<PersonelShopHistory>(this.attach_PersonelShopHistories), new Action<PersonelShopHistory>(this.detach_PersonelShopHistories));
			this._ShopProducts = new EntitySet<ShopProduct>(new Action<ShopProduct>(this.attach_ShopProducts), new Action<ShopProduct>(this.detach_ShopProducts));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(20)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_About", DbType="NVarChar(400)")]
		public string About
		{
			get
			{
				return this._About;
			}
			set
			{
				if ((this._About != value))
				{
					this.OnAboutChanging(value);
					this.SendPropertyChanging();
					this._About = value;
					this.SendPropertyChanged("About");
					this.OnAboutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_PersonelShopHistory", Storage="_PersonelShopHistories", ThisKey="Id", OtherKey="ShopId")]
		public EntitySet<PersonelShopHistory> PersonelShopHistories
		{
			get
			{
				return this._PersonelShopHistories;
			}
			set
			{
				this._PersonelShopHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopProduct", Storage="_ShopProducts", ThisKey="Id", OtherKey="ShopId")]
		public EntitySet<ShopProduct> ShopProducts
		{
			get
			{
				return this._ShopProducts;
			}
			set
			{
				this._ShopProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Order", Storage="_Orders", ThisKey="Id", OtherKey="ShopId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonelShopHistories(PersonelShopHistory entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_PersonelShopHistories(PersonelShopHistory entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ShopProducts(ShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ShopProducts(ShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _LatinTitle;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<OrderStatus> _OrderStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public Status()
		{
			this._OrderStatus = new EntitySet<OrderStatus>(new Action<OrderStatus>(this.attach_OrderStatus), new Action<OrderStatus>(this.detach_OrderStatus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_OrderStatus", Storage="_OrderStatus", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<OrderStatus> OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				this._OrderStatus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderStatus(OrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_OrderStatus(OrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stuff")]
	public partial class Stuff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _LatinTitle;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<ProductStuff> _ProductStuffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public Stuff()
		{
			this._ProductStuffs = new EntitySet<ProductStuff>(new Action<ProductStuff>(this.attach_ProductStuffs), new Action<ProductStuff>(this.detach_ProductStuffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stuff_ProductStuff", Storage="_ProductStuffs", ThisKey="Id", OtherKey="StuffId")]
		public EntitySet<ProductStuff> ProductStuffs
		{
			get
			{
				return this._ProductStuffs;
			}
			set
			{
				this._ProductStuffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductStuffs(ProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.Stuff = this;
		}
		
		private void detach_ProductStuffs(ProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.Stuff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _LatinTitle;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateData;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<ProductStuff> _ProductStuffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDataChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDataChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public Unit()
		{
			this._ProductStuffs = new EntitySet<ProductStuff>(new Action<ProductStuff>(this.attach_ProductStuffs), new Action<ProductStuff>(this.detach_ProductStuffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateData", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateData
		{
			get
			{
				return this._CreateData;
			}
			set
			{
				if ((this._CreateData != value))
				{
					this.OnCreateDataChanging(value);
					this.SendPropertyChanging();
					this._CreateData = value;
					this.SendPropertyChanged("CreateData");
					this.OnCreateDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_ProductStuff", Storage="_ProductStuffs", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<ProductStuff> ProductStuffs
		{
			get
			{
				return this._ProductStuffs;
			}
			set
			{
				this._ProductStuffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductStuffs(ProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.Unit = this;
		}
		
		private void detach_ProductStuffs(ProductStuff entity)
		{
			this.SendPropertyChanging();
			entity.Unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopProduct")]
	public partial class ShopProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Price;
		
		private string _Details;
		
		private int _ShopId;
		
		private int _ProductId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public ShopProduct()
		{
			this._Product = default(EntityRef<Product>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(300)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ShopProduct", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ShopProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ShopProducts.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopProduct", Storage="_Shop", ThisKey="ShopId", OtherKey="Id", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ShopProducts.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ShopProducts.Add(this);
						this._ShopId = value.Id;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private int _OrderCode;
		
		private System.Nullable<int> _OrderTypeId;
		
		private int _CustomerId;
		
		private int _ShopId;
		
		private System.Nullable<int> _PersonelId;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifyUserId;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private System.Nullable<bool> _IsDone;
		
		private EntitySet<OrderProduct> _OrderProducts;
		
		private EntitySet<OrderSource> _OrderSources;
		
		private EntitySet<OrderStatus> _OrderStatus;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<OrderType> _OrderType;
		
		private EntityRef<Personel> _Personel;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnOrderCodeChanging(int value);
    partial void OnOrderCodeChanged();
    partial void OnOrderTypeIdChanging(System.Nullable<int> value);
    partial void OnOrderTypeIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnPersonelIdChanging(System.Nullable<int> value);
    partial void OnPersonelIdChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyUserIdChanging(System.Nullable<int> value);
    partial void OnModifyUserIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnIsDoneChanging(System.Nullable<bool> value);
    partial void OnIsDoneChanged();
    #endregion
		
		public Order()
		{
			this._OrderProducts = new EntitySet<OrderProduct>(new Action<OrderProduct>(this.attach_OrderProducts), new Action<OrderProduct>(this.detach_OrderProducts));
			this._OrderSources = new EntitySet<OrderSource>(new Action<OrderSource>(this.attach_OrderSources), new Action<OrderSource>(this.detach_OrderSources));
			this._OrderStatus = new EntitySet<OrderStatus>(new Action<OrderStatus>(this.attach_OrderStatus), new Action<OrderStatus>(this.detach_OrderStatus));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Customer = default(EntityRef<Customer>);
			this._OrderType = default(EntityRef<OrderType>);
			this._Personel = default(EntityRef<Personel>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime2 NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCode", DbType="Int NOT NULL")]
		public int OrderCode
		{
			get
			{
				return this._OrderCode;
			}
			set
			{
				if ((this._OrderCode != value))
				{
					this.OnOrderCodeChanging(value);
					this.SendPropertyChanging();
					this._OrderCode = value;
					this.SendPropertyChanged("OrderCode");
					this.OnOrderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTypeId", DbType="Int")]
		public System.Nullable<int> OrderTypeId
		{
			get
			{
				return this._OrderTypeId;
			}
			set
			{
				if ((this._OrderTypeId != value))
				{
					if (this._OrderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeId = value;
					this.SendPropertyChanged("OrderTypeId");
					this.OnOrderTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelId", DbType="Int")]
		public System.Nullable<int> PersonelId
		{
			get
			{
				return this._PersonelId;
			}
			set
			{
				if ((this._PersonelId != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonelIdChanging(value);
					this.SendPropertyChanging();
					this._PersonelId = value;
					this.SendPropertyChanged("PersonelId");
					this.OnPersonelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserId", DbType="Int")]
		public System.Nullable<int> ModifyUserId
		{
			get
			{
				return this._ModifyUserId;
			}
			set
			{
				if ((this._ModifyUserId != value))
				{
					this.OnModifyUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserId = value;
					this.SendPropertyChanged("ModifyUserId");
					this.OnModifyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit")]
		public System.Nullable<bool> IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this.OnIsDoneChanging(value);
					this.SendPropertyChanging();
					this._IsDone = value;
					this.SendPropertyChanged("IsDone");
					this.OnIsDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderProduct", Storage="_OrderProducts", ThisKey="Id", OtherKey="OrderId")]
		public EntitySet<OrderProduct> OrderProducts
		{
			get
			{
				return this._OrderProducts;
			}
			set
			{
				this._OrderProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderSource", Storage="_OrderSources", ThisKey="Id", OtherKey="OrderId")]
		public EntitySet<OrderSource> OrderSources
		{
			get
			{
				return this._OrderSources;
			}
			set
			{
				this._OrderSources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderStatus", Storage="_OrderStatus", ThisKey="Id", OtherKey="OrderId")]
		public EntitySet<OrderStatus> OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				this._OrderStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Payment", Storage="_Payments", ThisKey="Id", OtherKey="OrderId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_Order", Storage="_OrderType", ThisKey="OrderTypeId", OtherKey="Id", IsForeignKey=true)]
		public OrderType OrderType
		{
			get
			{
				return this._OrderType.Entity;
			}
			set
			{
				OrderType previousValue = this._OrderType.Entity;
				if (((previousValue != value) 
							|| (this._OrderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderType.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._OrderType.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._OrderTypeId = value.Id;
					}
					else
					{
						this._OrderTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Order", Storage="_Personel", ThisKey="PersonelId", OtherKey="Id", IsForeignKey=true)]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._PersonelId = value.Id;
					}
					else
					{
						this._PersonelId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Order", Storage="_Shop", ThisKey="ShopId", OtherKey="Id", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ShopId = value.Id;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderProducts(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderProducts(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderSources(OrderSource entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderSources(OrderSource entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderStatus(OrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderStatus(OrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
}
#pragma warning restore 1591
